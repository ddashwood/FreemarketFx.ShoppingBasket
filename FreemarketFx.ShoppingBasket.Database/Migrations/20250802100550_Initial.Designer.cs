// <auto-generated />
using System;
using FreemarketFx.ShoppingBasket.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FreemarketFx.ShoppingBasket.Database.Migrations
{
    [DbContext(typeof(ShoppingBasketContext))]
    [Migration("20250802100550_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FreemarketFx.ShoppingBasket.Models.Basket", b =>
                {
                    b.Property<Guid>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BasketName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DiscountCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("int");

                    b.HasKey("BasketId");

                    b.ToTable("Basket", null, t =>
                        {
                            t.HasCheckConstraint("CHK_Basket_DiscountPercent", "DiscountPercent > 0 AND DiscountPercent <= 100");
                        });
                });

            modelBuilder.Entity("FreemarketFx.ShoppingBasket.Models.BasketItem", b =>
                {
                    b.Property<Guid>("BasketItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BasePricePerItem")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BasketItemId");

                    b.HasIndex("BasketId");

                    b.ToTable("BasketItem", null, t =>
                        {
                            t.HasCheckConstraint("CHK_BasketItem_BasePricePerItem", "BasePricePerItem > 0");

                            t.HasCheckConstraint("CHK_BasketItem_DiscountPercent", "DiscountPercent > 0 AND DiscountPercent <= 100");

                            t.HasCheckConstraint("CHK_BasketItem_Quantity", "Quantity > 0");
                        });
                });

            modelBuilder.Entity("FreemarketFx.ShoppingBasket.Models.BasketShipping", b =>
                {
                    b.Property<Guid>("BasketShippingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal>("ShippingCost")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("BasketShippingId");

                    b.HasIndex("BasketId");

                    b.ToTable("BasketShipping", (string)null);
                });

            modelBuilder.Entity("FreemarketFx.ShoppingBasket.Models.BasketItem", b =>
                {
                    b.HasOne("FreemarketFx.ShoppingBasket.Models.Basket", "Basket")
                        .WithMany("BasketItems")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");
                });

            modelBuilder.Entity("FreemarketFx.ShoppingBasket.Models.BasketShipping", b =>
                {
                    b.HasOne("FreemarketFx.ShoppingBasket.Models.Basket", "Basket")
                        .WithMany("BasketShippings")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");
                });

            modelBuilder.Entity("FreemarketFx.ShoppingBasket.Models.Basket", b =>
                {
                    b.Navigation("BasketItems");

                    b.Navigation("BasketShippings");
                });
#pragma warning restore 612, 618
        }
    }
}
